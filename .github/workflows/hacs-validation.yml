name: HACS Validation

on:
  push:
    branches: [ main, dev,]
  pull_request:
    branches: [ main, dev, ]
  workflow_dispatch:

jobs:
  hacs-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: HACS Action
      uses: hacs/action@main
      with:
        category: integration

  python-syntax:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install homeassistant>=2023.1.0 aiohttp

    - name: Check Python syntax
      run: |
        echo "üîç Checking Python syntax for all files..."
        python -c "
import py_compile
import sys
import os

errors = []
for root, dirs, files in os.walk('.'):
    for file in files:
        if file.endswith('.py'):
            filepath = os.path.join(root, file)
            try:
                py_compile.compile(filepath, doraise=True)
                print(f'‚úÖ {filepath}')
            except py_compile.PyCompileError as e:
                print(f'‚ùå {filepath}: {e}')
                errors.append(filepath)

if errors:
    print(f'\n‚ùå Syntax errors found in {len(errors)} file(s)')
    sys.exit(1)
else:
    print(f'\n‚úÖ All Python files have valid syntax!')
"

    - name: Validate manifest.json
      run: |
        python -c "
import json
import sys

try:
    with open('custom_components/tududi_hacs/manifest.json', 'r') as f:
        manifest = json.load(f)
    
    required_fields = ['domain', 'name', 'version', 'documentation', 'dependencies', 'codeowners']
    missing = [field for field in required_fields if field not in manifest]
    
    if missing:
        print(f'‚ùå Missing required fields in manifest.json: {missing}')
        sys.exit(1)
    else:
        print('‚úÖ manifest.json is valid')
        print(f'   Domain: {manifest[\"domain\"]}')
        print(f'   Version: {manifest[\"version\"]}')
        print(f'   Name: {manifest[\"name\"]}')
        
except Exception as e:
    print(f'‚ùå Error validating manifest.json: {e}')
    sys.exit(1)
"
